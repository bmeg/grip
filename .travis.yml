os:
  - linux
language: go
go:
  - 1.9
sudo: required

services:
  - docker
  - elasticsearch

cache:
  directories:
    - $GOPATH/pkg
    - $GOPATH/src/github.com/bmeg/arachne/.git/modules
    - $GOPATH/src/github.com/bmeg/arachne/vendor

git:
  submodules: false

install:
  - make depends
  - make
  - sudo pip install numpy 

jobs:
  include:
    - stage: all
      script: make lint
      env:
        - n=lint
    - script:
      - make test
      env:
        - n=tests
    - script:
      - arachne server --rpc-port 18202 --http-port 18201 &
      - sleep 5
      - make test-conformance
      - go test ./test
      env:
        - n=badger
    - script:
      - arachne server --rpc-port 18202 --http-port 18201 --database bolt &
      - sleep 5
      - make test-conformance
      - go test ./test -config bolt.yml
      env:
        - n=boltdb
    - script:
        - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        - sudo apt-get update -qq
        - sudo apt-get install libsnappy-dev zlib1g-dev libbz2-dev -qq

        - wget https://launchpad.net/ubuntu/+archive/primary/+files/libgflags2_2.0-1.1ubuntu1_amd64.deb
        - sudo dpkg -i libgflags2_2.0-1.1ubuntu1_amd64.deb
        - wget https://launchpad.net/ubuntu/+archive/primary/+files/libgflags-dev_2.0-1.1ubuntu1_amd64.deb
        - sudo dpkg -i libgflags-dev_2.0-1.1ubuntu1_amd64.deb

        - git clone https://github.com/facebook/rocksdb.git /tmp/rocksdb
        - pushd /tmp/rocksdb
        - sudo make static_lib
        - sudo cp --preserve=links ./librocksdb.* /usr/lib/
        - sudo cp -r ./include/rocksdb/ /usr/include/
        - popd

        - make with-rocksdb
        - arachne server --rpc-port 18202 --http-port 18201 --database rocks &
        - sleep 5
        - make test-conformance
        - go test ./test -tags rocksdb -config rocks.yml
        - go test ./kvgraph/test -tags rocksdb
      env:
        - n=rocksdb
    - script:
      - arachne server --rpc-port 18202 --http-port 18201 --database level &
      - sleep 5
      - make test-conformance
      - go test ./test -config level.yml
      env:
        - n=leveldb
    - script:
      - make start-mongo
      - sleep 10
      - arachne server --rpc-port 18202 --http-port 18201 --database mongo --mongo-url localhost:27000 &
      - sleep 5
      - make test-conformance
      - go test ./test -config mongo.yml
      env:
        - n=mongodb
    - script:
      - sleep 10
      - arachne server --rpc-port 18202 --http-port 18201 --database elastic --elastic-url http://localhost:9200 &
      - sleep 5
      - make test-conformance
      - go test ./test -config elastic.yml
      env:
        - n=elasticsearch

notifications:
  email: false
